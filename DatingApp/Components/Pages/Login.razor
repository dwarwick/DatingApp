@page "/login"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudPaper Class="pa-6 mx-auto" MaxWidth="400px">
    <MudText Typo="Typo.h5" Class="mb-4">Login</MudText>
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <MudTextField @bind-Value="loginModel.Username" Label="Email" For="@(() => loginModel.Username)" Required="true" />
        <MudTextField @bind-Value="loginModel.Password" Label="Password" For="@(() => loginModel.Password)" InputType="InputType.Password" Required="true" />
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" FullWidth>Login</MudButton>
    </EditForm>
</MudPaper>

@code {
    private LoginModel loginModel = new();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("/api/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Login successful!", Severity.Success);
            Navigation.NavigateTo("/");
        }
        else
        {
            Snackbar.Add("Invalid username or password.", Severity.Error);
        }
    }

    public class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
    }
}
